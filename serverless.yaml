# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: nananah
service: curve-lend-telegram-bot
provider:
  name: aws
  runtime: nodejs20.x
  memorySize: 1024 # optional, in MB, default is 1024
  timeout: 10 # optional, in seconds, default is 6
  versionFunctions: false # optional, default is true
  tracing:
    lambda: true # optional, enables tracing for all functions (can be true (true equals 'Active') 'Active' or 'PassThrough')
  environment:
    BOT_TOKEN: ${env:BOT_TOKEN}
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'dynamodb:PutItem'
            - 'dynamodb:Get*'
            - 'dynamodb:Query*'
            - 'dynamodb:UpdateItem'
            - 'dynamodb:DeleteItem'
          Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/WatchedAddresses
functions:
  echo:
    handler: bot.hookbot # required, handler set in AWS Lambda
    name: curve-lend-telegram-bot # optional, Deployed Lambda name
    logRetentionInDays: 7
    events:
      - httpApi:
          method: POST
          path: /telegraf
resources:
  Resources:
    WatchedAddresses:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: WatchedAddresses
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: telegram_user_id
            AttributeType: N
        KeySchema:
          - AttributeName: telegram_user_id
            KeyType: HASH
        SSESpecification:
          SSEEnabled: true
